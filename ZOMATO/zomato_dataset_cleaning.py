# -*- coding: utf-8 -*-
"""zomato dataset cleaning.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1JTrP9hD5SOfDzwv4_IyBeyki6Tkj_Sfp
"""

import pandas as pd
import numpy as np
import csv
import matplotlib.pyplot as plt

df = pd.read_csv("/content/zomato.csv", encoding='latin-1')

print(df.head())

# show information about data
print(df.info())

# show unique values in every column
print(df.nunique())

df = df.drop(columns=['url','address','phone','reviews_list','menu_item'])

print(df.info())

columns_to_clean = ['name', 'online_order', 'book_table','location','rest_type','dish_liked','cuisines','listed_in(type)','listed_in(city)']

# clean columns
for col in columns_to_clean:
    df[col] = df[col].str.strip()               # remove spaces
    df[col] = df[col].str.capitalize()
    df[col] = df[col].str.replace(r'[^a-zA-Z\s]', '', regex=True)  # remove icons

# calculate nulls
null_counts = df.isnull().sum()
print(null_counts)

# calculate duplicated
print(df.duplicated().sum())

rows, columns = df.shape
print(f" Number of Rowes: {rows}")
print(f" Number of Columns: {columns}")

df = df.drop_duplicates()

# check duplicated
print(df.duplicated().sum())

rows, columns = df.shape
print(f" Number of Rowes: {rows}")
print(f" Number of Columns: {columns}")

df.head()

# draw Histogram
df['approx_cost(for two people)'].hist(bins=20)
plt.title('Distribution of approx_cost(for two people)')
plt.xlabel('Value')
plt.ylabel('Frequency')
plt.show()

# removw (commas) and convert text to float
df['approx_cost(for two people)'] = df['approx_cost(for two people)'].replace({',': ''}, regex=True).astype(float)

#  fill nulls with medain
df['approx_cost(for two people)'] = df['approx_cost(for two people)'].fillna(df['approx_cost(for two people)'].median())

# check convertaion
print(df['approx_cost(for two people)'].head())

null_counts = df.isnull().sum()
print(null_counts)

# fill nulls
df['dish_liked'] = df['dish_liked'].fillna('Not available')
df['cuisines'] = df['cuisines'].fillna('Not available')

null_counts = df.isnull().sum()
print(null_counts)

# meagre e 2 columns
df['Location'] = df['location'] + '-' + df['listed_in(city)']

df.head()

df = df.drop(columns=['location','listed_in(city)'])

df.head()

null_counts = df.isnull().sum()
print(null_counts)

# remove rows where location contain nulls
df = df.dropna(subset=['Location'])

null_counts = df.isnull().sum()
print(null_counts)

rows, columns = df.shape
print(f" Number of Rowes: {rows}")
print(f" Number of Columns: {columns}")

# convert 'NEW' and '-' to null
df['rate'] = df['rate'].replace('NEW', np.nan)
df['rate'] = df['rate'].replace('-', np.nan)

null_counts = df.isnull().sum()
print(null_counts)

# removw '/5'
df['rate'] = df['rate'].str.replace(r'/5', '', regex=True)

# convert text to float
df['rate'] = df['rate'].astype(float)

df['rate'] = df['rate'].fillna(df['rate'].median())
print(df['rate'].head())

null_counts = df.isnull().sum()
print(null_counts)

df.head()

df['rest_type'] = df['rest_type'].fillna('Not available')

null_counts = df.isnull().sum()
print(null_counts)

# check duplicated
print(df.duplicated().sum())

df = df.drop_duplicates()

# check duplicated
print(df.duplicated().sum())

rows, columns = df.shape
print(f" Number of Rowes: {rows}")
print(f" Number of Columns: {columns}")

df.to_csv('zomato after cleaning.csv', index=False)